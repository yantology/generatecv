name: Publish to PyPI

on:
  workflow_run:
    workflows: ["Python CI"] # Must match 'name:' of python-ci.yml
    types: [completed]
    branches: [main]
  workflow_dispatch: # Keep manual trigger
    inputs:
      test_pypi:
        description: 'Publish to Test PyPI instead of PyPI'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success'
    outputs:
      # True if workflow_run from Python CI (main, push, success) AND tag v* found on commit
      should_publish_workflow_run: ${{ steps.tag_info.outputs.tag_exists == 'true' && steps.trigger_check.outputs.is_valid_run_for_publish == 'true' }}
      # Actual tag name, if found
      tag_name: ${{ steps.tag_info.outputs.tag_name }}

    steps:
    - name: Check if workflow_run is a candidate for publishing
      id: trigger_check
      run: |
        is_valid='false'
        if [[ "${{ github.event_name }}" == "workflow_run" && \
              "${{ github.event.workflow_run.conclusion }}" == "success" && \
              "${{ github.event.workflow_run.name }}" == "Python CI" && \
              "${{ github.event.workflow_run.event }}" == "push" && \
              "${{ github.event.workflow_run.head_branch }}" == "main" ]]; then
          is_valid='true'
          echo "Workflow run is a candidate for publishing."
        else
          echo "Workflow run is NOT a candidate for publishing."
          echo "Event name: ${{ github.event_name }}"
          echo "Conclusion: ${{ github.event.workflow_run.conclusion }}"
          echo "Workflow name: ${{ github.event.workflow_run.name }}"
          echo "Triggering event: ${{ github.event.workflow_run.event }}"
          echo "Head branch: ${{ github.event.workflow_run.head_branch }}"
        fi
        echo "is_valid_run_for_publish=$is_valid" >> $GITHUB_OUTPUT

    - name: Checkout code
      uses: actions/checkout@v5
      with:
        # If workflow_run, checkout specific SHA, otherwise use current ref (for dispatch)
        ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.ref }}
        fetch-depth: 0 # Required for git tag --points-at to work

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install UV
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: uv sync --dev

    - name: Build package
      run: uv build

    - name: Check distribution
      run: |
        uv add --dev twine
        uv run twine check dist/*

    - name: Get tag information (if valid workflow_run trigger)
      id: tag_info
      if: steps.trigger_check.outputs.is_valid_run_for_publish == 'true'
      run: |
        # We are already on the correct commit due to the checkout step
        # Look for a tag like vX.Y.Z pointing to the current commit (HEAD)
        TAG_NAME=$(git tag --points-at HEAD | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
        if [[ -n "$TAG_NAME" ]]; then
          echo "Found publishable tag: $TAG_NAME at commit ${{ github.event.workflow_run.head_sha }}"
          echo "tag_exists=true" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        else
          echo "No matching vX.Y.Z tag found at commit ${{ github.event.workflow_run.head_sha }} for this workflow_run."
          git tag --points-at HEAD # Print all tags at HEAD for debugging
          echo "tag_exists=false" >> $GITHUB_OUTPUT
          echo "tag_name=" >> $GITHUB_OUTPUT
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        if-no-files-found: error

  publish-to-pypi:
    name: Publish to PyPI
    if: >
      (github.event_name == 'workflow_run' && needs.build.outputs.should_publish_workflow_run == 'true') ||
      (github.event_name == 'workflow_dispatch' && !inputs.test_pypi)
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/generatecv
    permissions:
      id-token: write # Required for trusted PyPI publishing

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      if: needs.build.outputs.tag_name != '' || github.event_name == 'workflow_dispatch' # Ensure tag exists for workflow_run
      uses: pypa/gh-action-pypi-publish@release/v1
      # For workflow_run, pypa/gh-action-pypi-publish will use the tag from needs.build.outputs.tag_name
      # if it's set and matches the version in the package.
      # For workflow_dispatch, it will publish based on the built package version.

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: github.event_name == 'workflow_dispatch' && inputs.test_pypi
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/generatecv
    permissions:
      id-token: write # Required for trusted PyPI publishing

    steps:
    - name: Download distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        # For workflow_dispatch, it will publish based on the built package version.