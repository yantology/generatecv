# Main project metadata
[project]
name = "generatecv"
version = "0.0.15"
description = "generatecv is a Python package for generating professional CVs (resumes) from structured data."
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "yantology", email = "work@yantology.dev" }]
maintainers = [{ name = "yantology", email = "work@yantology.dev" }]
requires-python = ">=3.13"
keywords = [
    "cv",
    "resume",
    "pdf",
    "generator",
    "template",
    "professional",
    "document",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Office/Business",
    "Topic :: Text Processing :: Markup",
    "Topic :: Utilities",
    "Typing :: Typed",
]
dependencies = [
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "reportlab>=4.4.1",
    "email-validator>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/yantology/generatecv"
Repository = "https://github.com/yantology/generatecv"
Documentation = "https://yantology.github.io/generatecv"
"Bug Reports" = "https://github.com/yantology/generatecv/issues"
"Source Code" = "https://github.com/yantology/generatecv"
Changelog = "https://github.com/yantology/generatecv/releases"

# Command-line scripts provided by the package
[project.scripts]
generatecv-example = "tool.main:main"

# Build system configuration
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Development dependencies (UV dependency groups)
[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=4.1.0",
    "pyrefly>=0.16.2",
    "ruff>=0.1.5",
    "black>=25.1.0",
    "types-PyYAML>=6.0.12.12",
    "types-setuptools>=80.8.0",
    "types-reportlab>=4.0.0.20240331",
    "twine>=5.0.0",
    "build>=1.0.0",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.14",
    "mkdocstrings[python]>=0.29.1",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.2",
    "pip-audit>=2.9.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.24.0",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.0",
]
security = ["bandit[toml]>=1.7.0", "safety>=3.0.0", "pip-audit>=2.6.0"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
pythonpath = "."

# Static type checking configuration
[tool.pyrefly]
search_path = ["src/generatecv", "src/tool"]

[tool.pyrefly.errors]
missing-attribute = false
unbound-name = true
not-callable = true
bad-assignment = true
bad-return = true

# Ruff linter configuration
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # PyFlakes rules
    "B",   # flake8-bugbear rules
    "I",   # isort rules
    "N",   # pep8-naming rules
    "UP",  # pyupgrade rules
    "PL",  # Pylint rules
    "RUF", # Ruff-specific rules
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004"]

# Black formatter configuration
[tool.black]
line-length = 88
target-version = ["py313"]

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*test*.py", "**/test_*.py"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Hatch build configuration
[tool.hatch.build.targets.wheel]
packages = ["src/generatecv", "src/tool"]

[tool.hatch.build.targets.sdist]
include = ["/src", "/tests", "/README.md", "/LICENSE", "/pyproject.toml"]
