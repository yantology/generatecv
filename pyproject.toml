# Main project metadata
[project]
name = "generatecv"
version = "0.0.1"
description = "generatecv is a Python package for generating professional CVs (resumes) from structured data."
readme = "README.md"
authors = [{ name = "yantology", email = "work@yantology.dev" }]
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.11.5",
    "pyyaml>=6.0.2",
    "reportlab>=4.4.1",
    "email-validator>=2.0.0",
]

# Command-line scripts provided by the package
[project.scripts]
generatecv-example = "tool.main:main"

# Build system configuration
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Development dependencies (UV dependency groups)
[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "pytest-cov>=4.1.0",
    "pyrefly>=0.16.2",
    "ruff>=0.1.5",
    "black>=25.1.0",
    "types-PyYAML>=6.0.12.12",
    "types-setuptools>=80.8.0",
    "types-reportlab>=4.0.0.20240331",
]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
pythonpath = "."

# Static type checking configuration
[tool.pyrefly]
search_path = ["src/generatecv", "src/tool"]

[tool.pyrefly.errors]
missing-attribute = false
unbound-name = true
not-callable = true
bad-assignment = true
bad-return = true

# Ruff linter configuration
[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # PyFlakes rules
    "B",   # flake8-bugbear rules
    "I",   # isort rules
    "N",   # pep8-naming rules
    "UP",  # pyupgrade rules
    "PL",  # Pylint rules
    "RUF", # Ruff-specific rules
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004"]

# Black formatter configuration
[tool.black]
line-length = 88
target-version = ["py313"]
